name: Test suite

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron:  '0 0 * * *'

jobs:
  unit-test:
    name: Unit tests

    services:
      postgres_13:
        image: postgis/postgis:13-master
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_PASSWORD: 'password'
          POSTGRES_DB: 'doctrine_postgis_tests'
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      postgres_11:
        image: postgis/postgis:11-3.1
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_PASSWORD: 'password'
          POSTGRES_DB: 'doctrine_postgis_tests'
        ports:
          - 5433:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        php: [ 8.0 ]
        os: [ ubuntu-latest ]
        postgres_version: [11, 13]
        include:
          -   os: [ ubuntu-latest ]
              php: 8.1
              composer-flag: "'--ignore-platform-reqs'"

          -   os: [ ubuntu-latest ]
              php: 7.4
              composer-flag: "'--prefer-lowest'"

    runs-on: ${{ matrix.os }}

    steps:
      -   uses: actions/checkout@v2
      -   name: Setup PHP
          uses: shivammathur/setup-php@v2
          with:
            php-version: ${{ matrix.php }}

      -   uses: actions/cache@v2
          id: cache-composer
          with:
              path: ~/.composer/cache
              key: composer-php-${{ matrix.php }}-${{ github.sha }}
              restore-keys: composer-php-${{ matrix.php }}-

      -   name: Install dependencies
          run: composer update --prefer-dist --no-progress --no-suggest ${{ matrix.composer-flag }}

      -   name: Run phpunit tests
          run: php vendor/bin/simple-phpunit -c ./phpunit.ci.postgis-${{ matrix.postgres_version }}-3-1.xml
